name: Test, build, push, scan and deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@main

      - name: Install Vue CLI
        run: npm install @vue/cli

      - name: Run Unit Tests
        run: npm run test:unit

  build:
    runs-on: ubuntu-latest

    needs: unit-tests

    steps:
    - name: Checkout master
      uses: actions/checkout@main

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        
    - name: Build container image
      run: docker build -t derpfad:latest .

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 1200

    - name: Tag image
      run: docker tag derpfad:latest registry.digitalocean.com/kephalosk/derpfad:latest
      
    - name: Push image to DigitalOcean Container Registry
      run: docker push registry.digitalocean.com/kephalosk/derpfad:latest
      
  analyze:
    runs-on: ubuntu-latest

    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200
        
      - name: Pull image from registry
        run: docker pull registry.digitalocean.com/kephalosk/derpfad:latest
        
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'registry.digitalocean.com/kephalosk/derpfad:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  integration-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    needs: analyze

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Pull image from registry
        run: docker pull registry.digitalocean.com/kephalosk/derpfad:latest

      - name: Run image from registry
        run: docker run -d -p 80:80 registry.digitalocean.com/kephalosk/derpfad:latest

      - name: Run Playwright tests
        run: npx playwright test integration-tests

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-integration
          path: playwright-report/
          retention-days: 30

  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    needs: analyze

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Pull image from registry
        run: docker pull registry.digitalocean.com/kephalosk/derpfad:latest

      - name: Run image from registry
        run: docker run -d -p 80:80 registry.digitalocean.com/kephalosk/derpfad:latest

      - name: Run Playwright tests
        run: npx playwright test e2e-tests

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy:
    runs-on: ubuntu-latest
    
    needs: [e2e-tests, integration-tests]

    steps:
    - name: Checkout master
      uses: actions/checkout@main

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 1200

    - name: Renew clusterâ€™s certificate
      run: doctl kubernetes cluster kubeconfig save ${{ secrets.CLUSTER_ID }}

    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl apply -f derpfad.yaml
        
    - name: restart Pods
      run: kubectl -n default rollout restart deploy

    - name: Verify deployment
      run: kubectl rollout status deployment/derpfad
